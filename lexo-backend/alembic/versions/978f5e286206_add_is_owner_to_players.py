"""add_is_owner_to_players

Revision ID: 978f5e286206
Revises: 6dfd239186d9
Create Date: 2025-08-05 16:32:12.518670

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '978f5e286206'
down_revision: Union[str, Sequence[str], None] = '6dfd239186d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_stats_id'), table_name='user_stats')
    op.drop_table('user_stats')
    op.drop_index(op.f('ix_game_history_id'), table_name='game_history')
    op.drop_table('game_history')
    op.drop_index(op.f('ix_word_history_id'), table_name='word_history')
    op.drop_table('word_history')
    op.add_column('players', sa.Column('is_owner', sa.Boolean(), nullable=True))
    op.create_index(op.f('ix_players_is_owner'), 'players', ['is_owner'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_players_is_owner'), table_name='players')
    op.drop_column('players', 'is_owner')
    op.create_table('word_history',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('game_history_id', sa.VARCHAR(), nullable=False),
    sa.Column('word', sa.VARCHAR(), nullable=False),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('word_length', sa.INTEGER(), nullable=True),
    sa.Column('is_valid', sa.BOOLEAN(), nullable=True),
    sa.Column('played_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['game_history_id'], ['game_history.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_word_history_id'), 'word_history', ['id'], unique=False)
    op.create_table('game_history',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('room_id', sa.VARCHAR(), nullable=False),
    sa.Column('game_mode', sa.VARCHAR(), nullable=False),
    sa.Column('result', sa.VARCHAR(), nullable=False),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('words_played', sa.INTEGER(), nullable=True),
    sa.Column('started_at', sa.DATETIME(), nullable=False),
    sa.Column('ended_at', sa.DATETIME(), nullable=False),
    sa.Column('duration_seconds', sa.INTEGER(), nullable=True),
    sa.Column('final_position', sa.INTEGER(), nullable=True),
    sa.Column('total_players', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_game_history_id'), 'game_history', ['id'], unique=False)
    op.create_table('user_stats',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('total_games', sa.INTEGER(), nullable=True),
    sa.Column('wins', sa.INTEGER(), nullable=True),
    sa.Column('losses', sa.INTEGER(), nullable=True),
    sa.Column('draws', sa.INTEGER(), nullable=True),
    sa.Column('total_score', sa.INTEGER(), nullable=True),
    sa.Column('highest_score', sa.INTEGER(), nullable=True),
    sa.Column('average_score', sa.INTEGER(), nullable=True),
    sa.Column('total_words', sa.INTEGER(), nullable=True),
    sa.Column('longest_word_length', sa.INTEGER(), nullable=True),
    sa.Column('longest_word', sa.VARCHAR(), nullable=True),
    sa.Column('total_playtime_seconds', sa.INTEGER(), nullable=True),
    sa.Column('classic_games', sa.INTEGER(), nullable=True),
    sa.Column('battle_royale_games', sa.INTEGER(), nullable=True),
    sa.Column('practice_games', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_stats_id'), 'user_stats', ['id'], unique=False)
    # ### end Alembic commands ###
