// This file is auto-generated by @hey-api/openapi-ts

import type { Client, Options as Options2, TDataShape } from "./client";
import { client } from "./client.gen";
import type {
  CreateUserApiUsersPostData,
  CreateUserApiUsersPostErrors,
  CreateUserApiUsersPostResponses,
  GetLeaderboardApiLeaderboardGetData,
  GetLeaderboardApiLeaderboardGetErrors,
  GetLeaderboardApiLeaderboardGetResponses,
  GetStatsStatsGetData,
  GetStatsStatsGetResponses,
  GetUserGamesApiUsersClerkIdGamesGetData,
  GetUserGamesApiUsersClerkIdGamesGetErrors,
  GetUserGamesApiUsersClerkIdGamesGetResponses,
  GetUserStatsApiUsersClerkIdStatsGetData,
  GetUserStatsApiUsersClerkIdStatsGetErrors,
  GetUserStatsApiUsersClerkIdStatsGetResponses,
  HealthCheckHealthGetData,
  HealthCheckHealthGetResponses,
  ReadRootGetData,
  ReadRootGetResponses,
  SaveGameApiGamesSavePostData,
  SaveGameApiGamesSavePostErrors,
  SaveGameApiGamesSavePostResponses,
  ValidateWordApiValidateWordPostData,
  ValidateWordApiValidateWordPostErrors,
  ValidateWordApiValidateWordPostResponses,
} from "./types.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = Options2<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * Read Root
 */
export const readRootGet = <ThrowOnError extends boolean = false>(
  options?: Options<ReadRootGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    ReadRootGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/",
    ...options,
  });
};

/**
 * Get Stats
 */
export const getStatsStatsGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetStatsStatsGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetStatsStatsGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/stats",
    ...options,
  });
};

/**
 * Health Check
 */
export const healthCheckHealthGet = <ThrowOnError extends boolean = false>(
  options?: Options<HealthCheckHealthGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    HealthCheckHealthGetResponses,
    unknown,
    ThrowOnError
  >({
    url: "/health",
    ...options,
  });
};

/**
 * Validate Word
 */
export const validateWordApiValidateWordPost = <
  ThrowOnError extends boolean = false,
>(
  options: Options<ValidateWordApiValidateWordPostData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    ValidateWordApiValidateWordPostResponses,
    ValidateWordApiValidateWordPostErrors,
    ThrowOnError
  >({
    url: "/api/validate-word",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Create User
 */
export const createUserApiUsersPost = <ThrowOnError extends boolean = false>(
  options: Options<CreateUserApiUsersPostData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    CreateUserApiUsersPostResponses,
    CreateUserApiUsersPostErrors,
    ThrowOnError
  >({
    url: "/api/users",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};

/**
 * Get User Stats
 */
export const getUserStatsApiUsersClerkIdStatsGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUserStatsApiUsersClerkIdStatsGetData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetUserStatsApiUsersClerkIdStatsGetResponses,
    GetUserStatsApiUsersClerkIdStatsGetErrors,
    ThrowOnError
  >({
    url: "/api/users/{clerk_id}/stats",
    ...options,
  });
};

/**
 * Get User Games
 */
export const getUserGamesApiUsersClerkIdGamesGet = <
  ThrowOnError extends boolean = false,
>(
  options: Options<GetUserGamesApiUsersClerkIdGamesGetData, ThrowOnError>,
) => {
  return (options.client ?? client).get<
    GetUserGamesApiUsersClerkIdGamesGetResponses,
    GetUserGamesApiUsersClerkIdGamesGetErrors,
    ThrowOnError
  >({
    url: "/api/users/{clerk_id}/games",
    ...options,
  });
};

/**
 * Get Leaderboard
 */
export const getLeaderboardApiLeaderboardGet = <
  ThrowOnError extends boolean = false,
>(
  options?: Options<GetLeaderboardApiLeaderboardGetData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetLeaderboardApiLeaderboardGetResponses,
    GetLeaderboardApiLeaderboardGetErrors,
    ThrowOnError
  >({
    url: "/api/leaderboard",
    ...options,
  });
};

/**
 * Save Game
 */
export const saveGameApiGamesSavePost = <ThrowOnError extends boolean = false>(
  options: Options<SaveGameApiGamesSavePostData, ThrowOnError>,
) => {
  return (options.client ?? client).post<
    SaveGameApiGamesSavePostResponses,
    SaveGameApiGamesSavePostErrors,
    ThrowOnError
  >({
    url: "/api/games/save",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers,
    },
  });
};
